SET(SRC_DIR "${CONTRIB_SOURCE_DIR}/ClickHouse-libhdfs3")

MESSAGE(LIBHDFS3_SOURCE_DIR: ${SRC_DIR})

EXECUTE_PROCESS(
    COMMAND yasm -f x64 -f elf64 -X gnu -g dwarf2 -D LINUX -o ${CMAKE_CURRENT_BINARY_DIR}/crc_iscsi_v_pcl.o ${SRC_DIR}/src/common/crc_iscsi_v_pcl.asm
    COMMAND_ECHO STDOUT
)

IF(USE_KRB5)
    MESSAGE("Enable kerberos for HDFS")
    SET(WITH_KERBEROS 1)
ENDIF()

set(HDFS3_SOURCE_DIR ${SRC_DIR}/src)
set(HDFS3_COMMON_DIR ${SRC_DIR}/src/common)

ADD_DEFINITIONS(-DTEST_HDFS_PREFIX="${TEST_HDFS_PREFIX}")
ADD_DEFINITIONS(-D__STDC_FORMAT_MACROS)
ADD_DEFINITIONS(-D_GNU_SOURCE)
ADD_DEFINITIONS(-D_GLIBCXX_USE_NANOSLEEP)
ADD_DEFINITIONS(-DHAVE_NANOSLEEP)

set(HAVE_STEADY_CLOCK 1)
set(HAVE_NESTED_EXCEPTION 1)
SET(HAVE_BOOST_CHRONO 0)
SET(HAVE_BOOST_ATOMIC 0)
SET(HAVE_STD_CHRONO 1)
SET(HAVE_STD_ATOMIC 1)

configure_file("${SRC_DIR}/src/platform.h.in" "${CMAKE_CURRENT_BINARY_DIR}/platform.h")

set(SRCS
    common.cc
    ${CRC_ISCSI_V_PCL_FILE}
)

ADD_LIBRARY(libhdfs3 ${SRCS})

TARGET_LINK_LIBRARIES(libhdfs3 PRIVATE OpenSSL::Crypto OpenSSL::SSL libgsasl krb5)
